package application;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.TreeSet;

public class Client {
	
	private TreeSet<String> folder_set =  new TreeSet<String>();

	public void copyFile(File source_file,File destinationFolder) throws IOException{
		File new_file_in_destination_folder = new File(destinationFolder.getAbsolutePath()+"/"+source_file.getName());
		InputStream in = null;
		OutputStream out = null;
		try {
	        in = new FileInputStream(source_file);
	        out = new FileOutputStream(new_file_in_destination_folder);
	        byte[] buffer = new byte[1024];
	        int length;
	        while ((length = in.read(buffer)) > 0) {
	            out.write(buffer, 0, length);
	        }
	    } 
		finally {
	        in.close();
	        out.close();
	    }
		
	}
	public void readAllFolders(File main_directory){
		for(File f : main_directory.listFiles()){
			if(f.isDirectory()){
				folder_set.add(f.getName());
			}
		}
	}
	public void cleanThisFolder(String path) throws IOException{
		if(!path.equals("")){
			File main_path = new File(path);
			if(main_path.exists() && main_path.isDirectory()){
				readAllFolders(main_path);
				for(File f : main_path.listFiles()){
					if(f.isFile()){
					String[]manipulatedFileName = f.getName().split("\\.");
					if(!folder_set.contains(manipulatedFileName[1])){
						folder_set.add(manipulatedFileName[1]);
						File new_folder = new File(main_path+"/"+manipulatedFileName[1].toUpperCase());
						new_folder.mkdir();
						copyFile(f,new_folder);
						f.delete();
					}else{
						File existing_folder = new File(main_path+"/"+manipulatedFileName[1].toUpperCase());
						copyFile(f, existing_folder);
						f.delete();
					}
					}
				}
			}else
				System.out.println("Directory not found !");
		}else
			System.out.println("Invalid Path");
		System.out.println(folder_set);
	}
	public static void main(String[] args) {
		try {
			new Client().cleanThisFolder("D:/Desktop");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
